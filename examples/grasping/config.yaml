# Configuration for Grasp Detection Example

# Elastic Node settings
elastic_node:
  optimization_metric: "latency"
  context_dim: 10
  gamma: 1.0
  beta_multiplier: 1.0
  force_sample_rate: 0.1
  
  # Action space optimized for image processing
  action_space:
    - press_ratio: 1.0
      release_ratio: 0.0
      description: "Full local - for high bandwidth scenarios"
      
    - press_ratio: 0.7
      release_ratio: 0.3
      description: "Local preprocessing + cloud inference"
      
    - press_ratio: 0.3
      release_ratio: 0.7
      description: "Minimal local + cloud processing"
      
    - press_ratio: 0.0
      release_ratio: 1.0
      description: "Full cloud - for low CPU scenarios"

# Grasp detection specific settings
grasp_detection:
  # Input image size
  input_size: [640, 480]
  
  # Maximum number of grasps to detect
  max_grasps: 10
  
  # Confidence threshold
  confidence_threshold: 0.5
  
  # Preprocessing settings
  preprocessing:
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]
    
  # Model settings (for real implementation)
  model:
    name: "grasp_net"
    weights: "models/grasp_net_weights.pth"
    device: "cuda"  # or "cpu"

# Performance thresholds
thresholds:
  # Maximum acceptable latency for real-time grasping (ms)
  max_latency: 500
  
  # Minimum bandwidth for cloud processing (Mbps)
  min_bandwidth: 5.0
  
  # CPU threshold for offloading
  max_cpu_usage: 70

# Visualization settings
visualization:
  show_preprocessing: true
  show_timing: true
  max_grasps_shown: 5
  grasp_color: [0, 255, 0]  # Green
  text_color: [255, 255, 255]  # White